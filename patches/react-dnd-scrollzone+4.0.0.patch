patch-package
--- a/node_modules/react-dnd-scrollzone/lib/index.js
+++ b/node_modules/react-dnd-scrollzone/lib/index.js
@@ -11,7 +11,8 @@ var _createClass = function () { function defineProperties(target, props) { for
 
 exports.createHorizontalStrength = createHorizontalStrength;
 exports.createVerticalStrength = createVerticalStrength;
-exports.default = createScrollingComponent;
+exports.createScrollingComponent = createScrollingComponent;
+exports.default = createScrollingComponentWithConsumer;
 
 var _react = require('react');
 
@@ -35,6 +36,8 @@ var _reactDisplayName = require('react-display-name');
 
 var _reactDisplayName2 = _interopRequireDefault(_reactDisplayName);
 
+var _DragDropContext = require('react-dnd/lib/DragDropContext');
+
 var _hoistNonReactStatics = require('hoist-non-react-statics');
 
 var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
@@ -161,7 +164,7 @@ function createScrollingComponent(WrappedComponent) {
         // have to attach the listeners to the body
         window.document.body.addEventListener('touchmove', this.handleEvent);
 
-        this.clearMonitorSubscription = this.context.dragDropManager.getMonitor().subscribeToStateChange(function () {
+        this.clearMonitorSubscription = this.props.dragDropManager.getMonitor().subscribeToStateChange(function () {
           return _this2.handleMonitorChange();
         });
       }
@@ -176,7 +179,7 @@ function createScrollingComponent(WrappedComponent) {
     }, {
       key: 'handleMonitorChange',
       value: function handleMonitorChange() {
-        var isDragging = this.context.dragDropManager.getMonitor().isDragging();
+        var isDragging = this.props.dragDropManager.getMonitor().isDragging();
 
         if (!this.dragging && isDragging) {
           this.dragging = true;
@@ -286,6 +289,7 @@ function createScrollingComponent(WrappedComponent) {
 
   ScrollingComponent.displayName = 'Scrolling(' + (0, _reactDisplayName2.default)(WrappedComponent) + ')';
   ScrollingComponent.propTypes = {
+    dragDropManager: _propTypes2.default.object.isRequired,
     onScrollChange: _propTypes2.default.func,
     verticalStrength: _propTypes2.default.func,
     horizontalStrength: _propTypes2.default.func,
@@ -297,10 +301,19 @@ function createScrollingComponent(WrappedComponent) {
     horizontalStrength: defaultHorizontalStrength,
     strengthMultiplier: 30
   };
-  ScrollingComponent.contextTypes = {
-    dragDropManager: _propTypes2.default.object
-  };
 
 
   return (0, _hoistNonReactStatics2.default)(ScrollingComponent, WrappedComponent);
+}function createScrollingComponentWithConsumer(WrappedComponent) {
+  var ScrollingComponent = createScrollingComponent(WrappedComponent);
+  return function (props) {
+    return _react2.default.createElement(
+      _DragDropContext.Consumer,
+      null,
+      function (_ref4) {
+        var dragDropManager = _ref4.dragDropManager;
+        return dragDropManager === undefined ? null : _react2.default.createElement(ScrollingComponent, _extends({}, props, { dragDropManager: dragDropManager }));
+      }
+    );
+  };
 }
